*** Starting uWSGI 2.0.18 (64bit) on [Wed Jan 29 14:08:41 2020] ***
compiled with version: 4.8.5 20150623 (Red Hat 4.8.5-39) on 29 January 2020 17:47:11
os: Linux-3.10.0-1062.4.3.el7.x86_64 #1 SMP Wed Nov 13 23:58:53 UTC 2019
nodename: web002.fritz.box
machine: x86_64
clock source: unix
detected number of CPU cores: 2
current working directory: /home/user/www/dcmdb-web
detected binary path: /home/user/.local/share/virtualenvs/dcmdb-web-N2BcnVZ8/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
*** WARNING: you are running uWSGI without its master process manager ***
your processes number limit is 3871
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to UNIX address /home/user/www/dcmdb-web/uwsgi-dcmdb.sock fd 3
uwsgi socket 1 bound to TCP address :8000 fd 4
Python version: 3.6.8 (default, Aug  7 2019, 17:28:10)  [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]
Set PythonHome to /home/user/.local/share/virtualenvs/dcmdb-web-N2BcnVZ8
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0xff3eb0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 72904 bytes (71 KB) for 1 cores
*** Operational MODE: single process ***
mounting wsgi:app on /
WSGI app 0 (mountpoint='/') ready in 0 seconds on interpreter 0xff3eb0 pid: 8500 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI worker 1 (and the only) (pid: 8500, cores: 1)
Traceback (most recent call last):
  File "serve.py", line 37, in <module>
    "-H", venv_location
  File "/usr/lib64/python3.6/subprocess.py", line 425, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib64/python3.6/subprocess.py", line 855, in communicate
    self.wait()
  File "/usr/lib64/python3.6/subprocess.py", line 1477, in wait
    (pid, sts) = self._try_wait(0)
  File "/usr/lib64/python3.6/subprocess.py", line 1424, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
KeyboardInterrupt
*** Starting uWSGI 2.0.18 (64bit) on [Wed Jan 29 14:10:21 2020] ***
compiled with version: 4.8.5 20150623 (Red Hat 4.8.5-39) on 29 January 2020 17:47:11
os: Linux-3.10.0-1062.4.3.el7.x86_64 #1 SMP Wed Nov 13 23:58:53 UTC 2019
nodename: web002.fritz.box
machine: x86_64
clock source: unix
detected number of CPU cores: 2
current working directory: /home/user/www/dcmdb-web
detected binary path: /home/user/.local/share/virtualenvs/dcmdb-web-N2BcnVZ8/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
*** WARNING: you are running uWSGI without its master process manager ***
your processes number limit is 3871
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to UNIX address /home/user/www/dcmdb-web/uwsgi-dcmdb.sock fd 3
uwsgi socket 1 bound to TCP address :8000 fd 4
Python version: 3.6.8 (default, Aug  7 2019, 17:28:10)  [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]
Set PythonHome to /home/user/.local/share/virtualenvs/dcmdb-web-N2BcnVZ8
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0xbdaeb0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 72904 bytes (71 KB) for 1 cores
*** Operational MODE: single process ***
mounting wsgi:app on /
WSGI app 0 (mountpoint='/') ready in 1 seconds on interpreter 0xbdaeb0 pid: 8518 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI worker 1 (and the only) (pid: 8518, cores: 1)
[pid: 8518|app: 0|req: 1/1] 80.101.63.121 () {48 vars in 877 bytes} [Wed Jan 29 14:10:49 2020] GET /ui/api/v1/class/ => generated 5381 bytes in 38 msecs (HTTP/1.1 200) 3 headers in 95 bytes (1 switches on core 0)
*** Starting uWSGI 2.0.18 (64bit) on [Wed Jan 29 14:12:06 2020] ***
compiled with version: 4.8.5 20150623 (Red Hat 4.8.5-39) on 29 January 2020 17:47:11
os: Linux-3.10.0-1062.4.3.el7.x86_64 #1 SMP Wed Nov 13 23:58:53 UTC 2019
nodename: web002.fritz.box
machine: x86_64
clock source: unix
detected number of CPU cores: 2
current working directory: /home/user/www/dcmdb-web
detected binary path: /home/user/.local/share/virtualenvs/dcmdb-web-N2BcnVZ8/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
*** WARNING: you are running uWSGI without its master process manager ***
your processes number limit is 3871
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to UNIX address /home/user/www/dcmdb-web/uwsgi-dcmdb.sock fd 3
uwsgi socket 1 bound to TCP address :8000 fd 4
Python version: 3.6.8 (default, Aug  7 2019, 17:28:10)  [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]
Set PythonHome to /home/user/.local/share/virtualenvs/dcmdb-web-N2BcnVZ8
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0xcb5eb0
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 72904 bytes (71 KB) for 1 cores
*** Operational MODE: single process ***
mounting wsgi:app on /
WSGI app 0 (mountpoint='/') ready in 0 seconds on interpreter 0xcb5eb0 pid: 8535 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI worker 1 (and the only) (pid: 8535, cores: 1)
[pid: 8535|app: 0|req: 1/1] 80.101.63.121 () {48 vars in 877 bytes} [Wed Jan 29 14:12:21 2020] GET /ui/api/v1/class/ => generated 5381 bytes in 40 msecs (HTTP/1.1 200) 3 headers in 95 bytes (1 switches on core 0)
[pid: 8535|app: 0|req: 2/2] 80.101.63.121 () {46 vars in 862 bytes} [Wed Jan 29 14:12:25 2020] GET /ui/api/v1/class/ => generated 5381 bytes in 13 msecs (HTTP/1.1 200) 3 headers in 95 bytes (1 switches on core 0)
[pid: 8535|app: 0|req: 3/3] 80.101.63.121 () {46 vars in 876 bytes} [Wed Jan 29 14:12:27 2020] GET /ui/api/v1/class/company => generated 309 bytes in 9 msecs (HTTP/1.1 308) 3 headers in 159 bytes (1 switches on core 0)
[pid: 8535|app: 0|req: 4/4] 80.101.63.121 () {46 vars in 878 bytes} [Wed Jan 29 14:12:27 2020] GET /ui/api/v1/class/company/ => generated 2892 bytes in 21 msecs (HTTP/1.1 200) 3 headers in 95 bytes (1 switches on core 0)
[pid: 8535|app: 0|req: 5/5] 80.101.63.121 () {46 vars in 896 bytes} [Wed Jan 29 14:12:30 2020] GET /ui/api/v1/class/company/ditzo => generated 321 bytes in 4 msecs (HTTP/1.1 308) 3 headers in 165 bytes (1 switches on core 0)
[pid: 8535|app: 0|req: 6/6] 80.101.63.121 () {46 vars in 898 bytes} [Wed Jan 29 14:12:30 2020] GET /ui/api/v1/class/company/ditzo/ => generated 3668 bytes in 39 msecs (HTTP/1.1 200) 3 headers in 95 bytes (1 switches on core 0)
[pid: 8535|app: 0|req: 7/7] 80.101.63.121 () {46 vars in 934 bytes} [Wed Jan 29 14:12:32 2020] GET /ui/api/v1/class/department/web_services_ditzo => generated 353 bytes in 4 msecs (HTTP/1.1 308) 3 headers in 181 bytes (1 switches on core 0)
[pid: 8535|app: 0|req: 8/8] 80.101.63.121 () {46 vars in 936 bytes} [Wed Jan 29 14:12:32 2020] GET /ui/api/v1/class/department/web_services_ditzo/ => generated 4151 bytes in 16 msecs (HTTP/1.1 200) 3 headers in 95 bytes (1 switches on core 0)
[pid: 8535|app: 0|req: 9/9] 80.101.63.121 () {46 vars in 912 bytes} [Wed Jan 29 14:12:37 2020] GET /ui/api/v1/class/department => generated 315 bytes in 4 msecs (HTTP/1.1 308) 3 headers in 162 bytes (1 switches on core 0)
[pid: 8535|app: 0|req: 10/10] 80.101.63.121 () {46 vars in 914 bytes} [Wed Jan 29 14:12:37 2020] GET /ui/api/v1/class/department/ => generated 3063 bytes in 5 msecs (HTTP/1.1 200) 3 headers in 95 bytes (1 switches on core 0)
[pid: 8535|app: 0|req: 11/11] 80.101.63.121 () {46 vars in 873 bytes} [Wed Jan 29 14:12:38 2020] GET /ui/api/v1/class/ => generated 5381 bytes in 16 msecs (HTTP/1.1 200) 3 headers in 95 bytes (1 switches on core 0)
